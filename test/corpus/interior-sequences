==========
Sequence
==========
B<bold>
----------
(pod
  (plain_paragraph
    (content
      (interior_sequence (sequence_letter) (content)))))
==========
Empty sequence
==========
Z<>
----------
(pod
  (plain_paragraph
    (content
      (interior_sequence (sequence_letter)))))
==========
Mixed sequence/content
==========
normal B<bold> content
----------
(pod
  (plain_paragraph
    (content
      (interior_sequence (sequence_letter) (content)))))
==========
Nested sequence
==========
B<I<bold italic>>
----------
(pod
  (plain_paragraph
    (content
      (interior_sequence
        (sequence_letter)
        (content
          (interior_sequence (sequence_letter) (content)))))))
==========
Unconfused by single letters
==========
B

C
----------
(pod
  (plain_paragraph (content))
  (plain_paragraph (content)))
==========
Unconfused by incomplete sequences
==========
B<

C<
----------
; These yield errors but at least they don't stall the parser. The exact
; nature of the errors might be fragile, so this test may need changing in
; future.
(pod
  (plain_paragraph
    (content (interior_sequence (sequence_letter) (MISSING _intseq_end))))
  (ERROR (sequence_letter)))
==========
Incomplete sequence does not loop forever
==========
Z<
=cut
----------
; Same warning as above in terms of fragility. Fixes gh#2
(pod
  (ERROR (sequence_letter) (cut_directive))
)
